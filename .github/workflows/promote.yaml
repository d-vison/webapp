name: promote
on: 
  workflow_dispatch:
    inputs:
      component:
        description: component
        default: edjapi
        required: true
      version:
        description: Set Version
        default: '1.0'
        required: true
      file:
        description: file
        default: versions.yaml
        required: true

jobs:
  stack:
    name: Set Stack
    runs-on: ubuntu-latest
    outputs: 
      stack: ${{ steps.automatic.outputs.stack || steps.manual.outputs.stack }}
    
    steps:
      - name: automatic
        if: github.event.inputs.version == '1.0'
        id: automatic
        run: echo "::set-output name=stack::development"

      - name: manual
        if: github.event.inputs.version == '2.0'
        id: manual
        run: echo "::set-output name=stack::${{ github.event.inputs.version }}"

  manifest:
    name: Set Manifest
    runs-on: ubuntu-latest
    if: github.event.inputs.version == '1.0'
    needs: stack

    steps:
      - name: Update 
        run: echo ${{ needs.stack.outputs.stack }}

  version:
    name: Get Version
    runs-on: ubuntu-latest
    if: needs.stack.outputs.stack == 'development' && (github.event.inputs.component == 'edjapi' || github.event.inputs.component == 'edjconsole')
    needs: [stack, manifest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Show Version
        run: echo ${{ needs.stack.outputs.stack }}
      - name: Show File
        run: echo ${{ github.event.inputs.file }}
      - name: Update Versions
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: ${{ github.event.inputs.file }}
          propertyPath: ${{ github.event.inputs.component }}
          value: ${{ github.event.inputs.version }}
          commitChange: true
          branch: main 
          targetBranch: main
          message: 'CI Update Version'
          updateFile: true
      - name: Read Versions
        id: data
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: ${{ github.event.inputs.file }}
          api: "edjapi"
          console: "edjconsole"
      - name: Show API Version
        run: echo ${{ steps.data.outputs.api }}
      - name: Show Console Version
        run: echo ${{ steps.data.outputs.console }}