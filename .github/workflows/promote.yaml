name: promote

on: 
  workflow_dispatch:
    inputs:
      stack:
        description: Deploy To (development, load, staging, production)
        default: development
        required: true
      promote:
        description: Promote Versions (true/false)
        required: false 
        default: "false"
      component:
        description: component
        default: api
        required: true
      version:
        description: Set Version
        default: '1.0'
        required: true
      file:
        description: file
        default: versions.yaml
        required: true

jobs:
  stack:
    name: Set Stack
    runs-on: ubuntu-latest
    outputs: 
      stack: ${{ steps.automatic.outputs.stack || steps.manual.outputs.stack }}
    
    steps:
      - name: automatic
        if: github.event.inputs.version == '1.0'
        id: automatic
        run: echo "::set-output name=stack::development"

      - name: manual
        if: github.event.inputs.version == '2.0'
        id: manual
        run: echo "::set-output name=stack::${{ github.event.inputs.stack }}"

  manifest:
    name: Set Manifest
    runs-on: ubuntu-latest
    needs: stack

    steps:
      - name: Update 
        run: echo ${{ needs.stack.outputs.stack }}

      - name: Show Inputs
        run: echo "Stack:${{ github.event.inputs.stack }}\promote:${{ github.event.inputs.promote }}\nComponent:${{ github.event.inputs.component }}\Version:${{ github.event.inputs.version }}\nFile:${{ github.event.inputs.file }}"
      
      - name: Show Outputs
        run: echo ${{ needs.stack.outputs.name }}

  update:
    name: Set Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          ref: version

      - name: Update Versions
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: ${{ github.event.inputs.file }}
          propertyPath: ${{ github.event.inputs.component }}
          value: ${{ github.event.inputs.version }}
          commitChange: true
          message: 'CI Update Version'
          updateFile: true
          branch: version
          targetBranch: version

  version:
    name: Get Version
    runs-on: ubuntu-latest
    needs: [stack, manifest]

    strategy:
      matrix:
        variable: [
          api, 
          ca, 
          console, 
          eventconsumer, 
          events, 
          messenger, 
          proxy, 
          syncFeeds, 
          watchdog, 
          authorizer
        ]

    steps:
      - name: Checkout code
        if: github.event.inputs.version == '1.0'
        uses: actions/checkout@v1

      - name: Read Versions
        if: github.event.inputs.version == '1.0'
        id: data
        uses: CumulusDS/get-yaml-paths-action@v0.1.0
        with:
          file: ${{ github.event.inputs.file }}
          component: ${{ matrix.variable }}

      - name: Show Versions
        if: github.event.inputs.version == '1.0'
        run: echo ${{ steps.data.outputs.component }}
